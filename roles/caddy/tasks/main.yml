---
- name: Create caddy user and group
  group:
    name: "{{ caddy_group }}"
    state: present

- name: Create caddy user
  user:
    name: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    system: yes
    shell: /bin/false
    home: "{{ caddy_data_dir }}"
    createhome: yes

- name: Create caddy directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    mode: '0755'
  loop:
    - "{{ caddy_config_dir }}"
    - "{{ caddy_data_dir }}"
    - "{{ caddy_log_dir }}"
    - "/var/www/html"

- name: Download Caddy binary
  get_url:
    url: "https://github.com/caddyserver/caddy/releases/download/v{{ caddy_version }}/caddy_{{ caddy_version }}_linux_amd64.tar.gz"
    dest: "/tmp/caddy_{{ caddy_version }}_linux_amd64.tar.gz"
    mode: '0644'

- name: Extract Caddy binary
  unarchive:
    src: "/tmp/caddy_{{ caddy_version }}_linux_amd64.tar.gz"
    dest: /tmp
    remote_src: yes
    creates: /tmp/caddy

- name: Install Caddy binary
  copy:
    src: /tmp/caddy
    dest: "{{ caddy_binary_path }}"
    owner: root
    group: root
    mode: '0755'
    remote_src: yes
  notify: restart caddy

- name: Set capabilities for Caddy to bind to privileged ports
  command: setcap cap_net_bind_service=+ep {{ caddy_binary_path }}
  changed_when: false

- name: Create Caddyfile
  template:
    src: Caddyfile.j2
    dest: "{{ caddy_config_file }}"
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    mode: '0644'
  notify: reload caddy

- name: Create Caddy systemd service
  template:
    src: caddy.service.j2
    dest: /etc/systemd/system/caddy.service
    owner: root
    group: root
    mode: '0644'
  notify:
    - reload systemd
    - restart caddy

- name: Create Element web directory
  file:
    path: "/var/www/element"
    state: directory
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    mode: '0755'
  when: matrix_element_enabled | default(true)

- name: Create health check endpoint
  template:
    src: health.html.j2
    dest: "/var/www/html/health"
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    mode: '0644'
  when: caddy_health_check_enabled

- name: Configure log rotation for Caddy
  template:
    src: caddy-logrotate.j2
    dest: /etc/logrotate.d/caddy
    owner: root
    group: root
    mode: '0644'

- name: Enable and start Caddy service
  systemd:
    name: caddy
    enabled: yes
    state: started
    daemon_reload: yes

- name: Configure firewall for HTTP/HTTPS and Matrix federation
  command: "ufw allow {{ item }}/tcp comment '{{ item == '8448' and 'Matrix federation' or 'HTTP/HTTPS for Caddy' }}'"
  loop:
    - "80"
    - "443"
    - "8448"
  ignore_errors: yes

- name: Verify Caddy is running
  command: "{{ caddy_binary_path }} version"
  register: caddy_version_check
  changed_when: false

- name: Display Caddy status
  debug:
    msg: "Caddy {{ caddy_version }} installed and running"