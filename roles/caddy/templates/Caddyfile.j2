# Global options
{
    # Admin API (disabled for security)
    admin off

    # ACME configuration
    email {{ caddy_acme_email }}

    # Security
    servers {
        protocol {
            experimental_http3
        }
    }
}

# Matrix homeserver
{{ matrix_homeserver_name }} {
    # Security headers
{% for header, value in caddy_security_headers.items() %}
    header {{ header }} "{{ value }}"
{% endfor %}
    header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

    # Rate limiting
{% if caddy_rate_limit_enabled %}
    rate_limit {
        zone matrix {
            key {remote_host}
            events {{ caddy_rate_limit_requests }}
            window {{ caddy_rate_limit_window }}
        }
    }
{% endif %}

    # Matrix Client API
    handle /_matrix/* {
        reverse_proxy 127.0.0.1:8008 {
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            header_up Host {host}
        }
    }

    # Synapse Admin API (restricted)
    handle /_synapse/admin* {
        @admin_allowed {
            remote_ip 127.0.0.1 ::1
{% for ip in admin_allowed_ips | default(['127.0.0.1']) %}
            remote_ip {{ ip }}
{% endfor %}
        }
        handle @admin_allowed {
            reverse_proxy 127.0.0.1:8008
        }
        handle {
            respond "Access denied" 403
        }
    }

    # Synapse metrics (restricted)
    handle /_synapse/metrics* {
        @metrics_allowed {
            remote_ip 127.0.0.1 ::1
{% for ip in monitoring_allowed_ips | default(['127.0.0.1']) %}
            remote_ip {{ ip }}
{% endfor %}
        }
        handle @metrics_allowed {
            reverse_proxy 127.0.0.1:{{ matrix_metrics_port | default(9092) }}
        }
        handle {
            respond "Access denied" 403
        }
    }

    # Health check
{% if caddy_health_check_enabled %}
    handle {{ caddy_health_check_path }} {
        respond "Matrix server healthy" 200 {
            header Content-Type "text/plain"
        }
    }
{% endif %}

    # Federation API
    handle {
        reverse_proxy 127.0.0.1:8008 {
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            header_up Host {host}
        }
    }

    # Logging
    log {
        output file {{ caddy_access_log }} {
            roll_size 100MB
            roll_keep 5
            roll_keep_for 720h
        }
        level {{ caddy_log_level }}
    }
}

# Element web client
{{ matrix_domain }}{% if element_subdomain %}.{{ element_subdomain }}{% endif %} {
    # Security headers for Element
    header X-Frame-Options "SAMEORIGIN"
    header X-Content-Type-Options "nosniff"
    header X-XSS-Protection "1; mode=block"
    header Referrer-Policy "strict-origin-when-cross-origin"
    header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' {{ matrix_homeserver_name }}; media-src 'self'; object-src 'none'; frame-src 'none'; worker-src 'self'; frame-ancestors 'self'"
    header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

    # Root directory for Element
    root * /var/www/element

    # Well-known delegation for Matrix
    handle /.well-known/matrix/server {
        header Content-Type "application/json"
        header Access-Control-Allow-Origin "*"
        header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
        header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization"
        respond `{"m.server": "{{ matrix_homeserver_name }}:443"}`
    }

    handle /.well-known/matrix/client {
        header Content-Type "application/json"
        header Access-Control-Allow-Origin "*"
        header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
        header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization"
        respond `{"m.homeserver": {"base_url": "https://{{ matrix_homeserver_name }}"}}`
    }

    # Element configuration endpoint
    handle /config.json {
        header Cache-Control "no-cache"
        try_files {path} =404
    }

    # Health check
{% if caddy_health_check_enabled %}
    handle {{ caddy_health_check_path }} {
        respond "Element web healthy" 200 {
            header Content-Type "text/plain"
        }
    }
{% endif %}

    # Serve Element files
    handle {
        try_files {path} /index.html
        file_server
        encode gzip
        header Cache-Control "public, max-age=3600"
    }

    # Logging
    log {
        output file {{ caddy_access_log }} {
            roll_size 100MB
            roll_keep 5
            roll_keep_for 720h
        }
        level {{ caddy_log_level }}
    }
}

# Redirect matrix.domain.com port 8448 for federation
{{ matrix_homeserver_name }}:8448 {
    # Federation endpoint
    handle {
        reverse_proxy 127.0.0.1:8008 {
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            header_up Host {host}
        }
    }
}