# Logrotate configuration for Caddy web server
# Generated by Ansible

{{ caddy_log_dir | default('/var/log/caddy') }}/*.log {
    daily
    missingok
    rotate 52
    compress
    delaycompress
    notifempty
    copytruncate
    create 644 {{ caddy_user | default('caddy') }} {{ caddy_group | default('caddy') }}

    postrotate
        # Send USR1 signal to Caddy to reopen log files
        if [ -f /var/run/caddy.pid ]; then
            /bin/kill -USR1 $(cat /var/run/caddy.pid) 2>/dev/null || true
        fi

        # Alternative: reload Caddy service if PID file doesn't exist
        if ! [ -f /var/run/caddy.pid ]; then
            /bin/systemctl reload caddy 2>/dev/null || true
        fi
    endscript
}

# Rotate Caddy access logs more frequently if they get large
{{ caddy_log_dir | default('/var/log/caddy') }}/access.log {
    daily
    missingok
    rotate 30
    compress
    delaycompress
    notifempty
    copytruncate
    create 644 {{ caddy_user | default('caddy') }} {{ caddy_group | default('caddy') }}
    size 100M

    postrotate
        # Send USR1 signal to Caddy to reopen log files
        if [ -f /var/run/caddy.pid ]; then
            /bin/kill -USR1 $(cat /var/run/caddy.pid) 2>/dev/null || true
        fi

        # Alternative: reload Caddy service if PID file doesn't exist
        if ! [ -f /var/run/caddy.pid ]; then
            /bin/systemctl reload caddy 2>/dev/null || true
        fi
    endscript
}

# Rotate Caddy error logs
{{ caddy_log_dir | default('/var/log/caddy') }}/error.log {
    daily
    missingok
    rotate 90
    compress
    delaycompress
    notifempty
    copytruncate
    create 644 {{ caddy_user | default('caddy') }} {{ caddy_group | default('caddy') }}

    postrotate
        # Send USR1 signal to Caddy to reopen log files
        if [ -f /var/run/caddy.pid ]; then
            /bin/kill -USR1 $(cat /var/run/caddy.pid) 2>/dev/null || true
        fi

        # Alternative: reload Caddy service if PID file doesn't exist
        if ! [ -f /var/run/caddy.pid ]; then
            /bin/systemctl reload caddy 2>/dev/null || true
        fi
    endscript
}