---
- name: Install UFW
  apt:
    name: ufw
    state: present
    update_cache: yes

- name: Reset UFW rules if requested
  command: ufw --force reset
  when: ufw_reset_rules | default(false)

- name: Configure UFW default policies
  command: "ufw default {{ item.policy }} {{ item.direction }}"
  loop:
    - { direction: 'incoming', policy: "{{ ufw_default_incoming_policy }}" }
    - { direction: 'outgoing', policy: "{{ ufw_default_outgoing_policy }}" }
    - { direction: 'routed', policy: "{{ ufw_default_forward_policy }}" }

- name: Configure UFW logging
  command: "ufw logging {{ ufw_log_level }}"

- name: Allow outgoing traffic for essential services
  command: "ufw allow out {{ item.port }}/{{ item.proto }} comment '{{ item.comment }}'"
  loop:
    - { port: "53", proto: "udp", comment: "DNS" }
    - { port: "53", proto: "tcp", comment: "DNS TCP" }
    - { port: "80", proto: "tcp", comment: "HTTP outbound" }
    - { port: "443", proto: "tcp", comment: "HTTPS outbound" }
    - { port: "123", proto: "udp", comment: "NTP" }

- name: Generate UFW rules configuration script
  template:
    src: ufw-rules.sh.j2
    dest: /tmp/ufw-rules.sh
    mode: '0755'

- name: Apply UFW rules from script
  command: /bin/bash /tmp/ufw-rules.sh
  notify: reload ufw

- name: Clean up UFW rules script
  file:
    path: /tmp/ufw-rules.sh
    state: absent

- name: Enable UFW
  command: ufw --force enable
  when: ufw_enabled

- name: Disable UFW
  command: ufw --force disable
  when: not ufw_enabled

- name: Create iptables configuration directory
  file:
    path: /etc/iptables
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Configure iptables for additional security
  template:
    src: iptables-security.j2
    dest: /etc/iptables/rules.security
    owner: root
    group: root
    mode: '0644'
  notify: reload iptables

- name: Create UFW application profile for Matrix
  template:
    src: ufw-matrix.j2
    dest: /etc/ufw/applications.d/matrix
    owner: root
    group: root
    mode: '0644'
  notify: reload ufw

- name: Create fail2ban action directory
  file:
    path: /etc/fail2ban/action.d
    state: directory
    owner: root
    group: root
    mode: '0755'
  when: fail2ban_enabled | default(true)

- name: Configure fail2ban UFW integration
  template:
    src: fail2ban-ufw.conf.j2
    dest: /etc/fail2ban/action.d/ufw.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart fail2ban
  when: fail2ban_enabled | default(true)

- name: Ensure UFW is enabled at boot
  systemd:
    name: ufw
    enabled: yes
    state: started
  when: ufw_enabled