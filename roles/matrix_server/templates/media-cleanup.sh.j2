#!/bin/bash
# Matrix Media Cleanup Script
# Removes unused media files older than {{ matrix_media_retention_days }} days
# Generated by Ansible

set -euo pipefail

# Configuration
SYNAPSE_CONFIG="{{ matrix_synapse_config_dir }}/homeserver.yaml"
SYNAPSE_VENV="{{ matrix_synapse_home }}/venv"
MEDIA_STORE="{{ matrix_media_store_path }}"
RETENTION_DAYS={{ matrix_media_retention_days }}
LOG_FILE="{{ matrix_synapse_log_dir }}/media-cleanup.log"

# Logging function
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# Check if Matrix Synapse is running
check_synapse_running() {
    if ! systemctl is-active --quiet matrix-synapse; then
        log "ERROR: Matrix Synapse is not running. Skipping media cleanup."
        exit 1
    fi
}

# Calculate disk usage before cleanup
get_disk_usage() {
    if [ -d "$MEDIA_STORE" ]; then
        du -sh "$MEDIA_STORE" 2>/dev/null | cut -f1
    else
        echo "0B"
    fi
}

# Main cleanup function
cleanup_media() {
    log "Starting Matrix media cleanup (retention: ${RETENTION_DAYS} days)"

    local before_size=$(get_disk_usage)
    log "Media store size before cleanup: $before_size"

    # Run the Synapse media cleanup script
    if [ -f "$SYNAPSE_VENV/bin/python" ]; then
        log "Running Synapse media repository cleanup..."

        # Delete local media older than retention period
        "$SYNAPSE_VENV/bin/python" -m synapse.app.admin_cmd \
            purge-media \
            --config-path "$SYNAPSE_CONFIG" \
            --before-ts $(($(date +%s) - RETENTION_DAYS * 86400)) \
            --local-media \
            2>&1 | tee -a "$LOG_FILE"

        # Delete remote media older than retention period
        "$SYNAPSE_VENV/bin/python" -m synapse.app.admin_cmd \
            purge-media \
            --config-path "$SYNAPSE_CONFIG" \
            --before-ts $(($(date +%s) - RETENTION_DAYS * 86400)) \
            --remote-media \
            2>&1 | tee -a "$LOG_FILE"

        # Clean up orphaned files
        log "Cleaning up orphaned media files..."
        find "$MEDIA_STORE" -type f -mtime +$RETENTION_DAYS -name "*.tmp" -delete 2>/dev/null || true
        find "$MEDIA_STORE" -type d -empty -delete 2>/dev/null || true

        local after_size=$(get_disk_usage)
        log "Media store size after cleanup: $after_size"
        log "Media cleanup completed successfully"

    else
        log "ERROR: Synapse virtual environment not found at $SYNAPSE_VENV"
        exit 1
    fi
}

# Vacuum the database after cleanup
vacuum_database() {
    log "Running database vacuum to reclaim space..."

    sudo -u postgres psql -d "{{ matrix_database_name }}" -c "VACUUM ANALYZE;" 2>&1 | tee -a "$LOG_FILE" || {
        log "WARNING: Database vacuum failed"
    }
}

# Main execution
main() {
    log "=== Matrix Media Cleanup Started ==="

    check_synapse_running
    cleanup_media
    vacuum_database

    log "=== Matrix Media Cleanup Finished ==="
}

# Run with lock to prevent concurrent executions
(
    flock -n 9 || {
        log "Another media cleanup process is already running"
        exit 1
    }

    main

) 9>/var/lock/matrix-media-cleanup.lock