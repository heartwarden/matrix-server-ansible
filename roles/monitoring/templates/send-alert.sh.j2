#!/bin/bash
# Alert notification script for Matrix server
# Generated by Ansible

set -euo pipefail

# Configuration
ALERT_EMAIL="{{ monitoring_email | default('root@localhost') }}"
ALERT_WEBHOOK="{{ monitoring_webhook | default('') }}"
SERVER_NAME="{{ inventory_hostname }}"
ALERT_LEVEL="${1:-INFO}"
ALERT_MESSAGE="${2:-No message provided}"
ALERT_SERVICE="${3:-unknown}"

# Logging
LOG_FILE="/var/log/monitoring/alerts.log"
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

log() {
    echo "[$TIMESTAMP] $1" | tee -a "$LOG_FILE"
}

send_email() {
    local subject="[$ALERT_LEVEL] $SERVER_NAME - $ALERT_SERVICE Alert"
    local body="
Server: $SERVER_NAME
Service: $ALERT_SERVICE
Alert Level: $ALERT_LEVEL
Time: $TIMESTAMP

Message:
$ALERT_MESSAGE

--
Matrix Server Monitoring System
"

    if command -v mail >/dev/null 2>&1; then
        echo "$body" | mail -s "$subject" "$ALERT_EMAIL"
        log "Email alert sent to $ALERT_EMAIL"
    else
        log "ERROR: mail command not available"
        return 1
    fi
}

send_webhook() {
    if [ -n "$ALERT_WEBHOOK" ] && command -v curl >/dev/null 2>&1; then
        local payload="{
            \"server\": \"$SERVER_NAME\",
            \"service\": \"$ALERT_SERVICE\",
            \"level\": \"$ALERT_LEVEL\",
            \"message\": \"$ALERT_MESSAGE\",
            \"timestamp\": \"$TIMESTAMP\"
        }"

        if curl -s -X POST \
            -H "Content-Type: application/json" \
            -d "$payload" \
            "$ALERT_WEBHOOK" >/dev/null; then
            log "Webhook alert sent to $ALERT_WEBHOOK"
        else
            log "ERROR: Failed to send webhook alert"
            return 1
        fi
    fi
}

send_matrix_notification() {
    # Send to Matrix room if configured
    local matrix_room="{{ monitoring_matrix_room | default('') }}"
    local matrix_token="{{ monitoring_matrix_token | default('') }}"
    local matrix_server="{{ matrix_homeserver_name | default('') }}"

    if [ -n "$matrix_room" ] && [ -n "$matrix_token" ] && [ -n "$matrix_server" ]; then
        local message="ðŸš¨ **$ALERT_LEVEL Alert**

**Server:** $SERVER_NAME
**Service:** $ALERT_SERVICE
**Time:** $TIMESTAMP

$ALERT_MESSAGE"

        local payload="{
            \"msgtype\": \"m.text\",
            \"body\": \"$message\",
            \"format\": \"org.matrix.custom.html\",
            \"formatted_body\": \"$(echo "$message" | sed 's/\*\*/\<strong\>/g; s/\*\*/\<\/strong\>/g')\"
        }"

        if curl -s -X PUT \
            -H "Authorization: Bearer $matrix_token" \
            -H "Content-Type: application/json" \
            -d "$payload" \
            "https://$matrix_server/_matrix/client/r0/rooms/$matrix_room/send/m.room.message/$(date +%s)" >/dev/null; then
            log "Matrix notification sent to room $matrix_room"
        else
            log "ERROR: Failed to send Matrix notification"
        fi
    fi
}

main() {
    log "Alert: [$ALERT_LEVEL] $ALERT_SERVICE - $ALERT_MESSAGE"

    # Send notifications based on alert level
    case "$ALERT_LEVEL" in
        "CRITICAL"|"ALERT"|"ERROR")
            send_email
            send_webhook
            send_matrix_notification
            ;;
        "WARNING"|"WARN")
            send_email
            send_webhook
            ;;
        "INFO"|"NOTICE")
            # Only log for info messages unless specifically configured
            if [ "{{ monitoring_info_notifications | default('false') }}" = "true" ]; then
                send_email
            fi
            ;;
    esac
}

main "$@"