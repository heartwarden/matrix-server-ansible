#!/bin/bash
# SSL Certificate Backup Script

set -euo pipefail

BACKUP_DIR="{{ ssl_backup_path }}"
LETSENCRYPT_DIR="/etc/letsencrypt"
DATE=$(date '+%Y%m%d_%H%M%S')
BACKUP_FILE="ssl_certificates_$DATE.tar.gz"
LOG_FILE="/var/log/ssl-backup.log"

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

log "Starting SSL certificate backup"

# Ensure backup directory exists
mkdir -p "$BACKUP_DIR"

# Create backup
if tar -czf "$BACKUP_DIR/$BACKUP_FILE" -C / etc/letsencrypt etc/ssl/private etc/ssl/certs etc/ssl/dhparam.pem 2>/dev/null; then
    log "Backup created successfully: $BACKUP_FILE"

    # Set secure permissions on backup
    chmod 600 "$BACKUP_DIR/$BACKUP_FILE"
    chown root:root "$BACKUP_DIR/$BACKUP_FILE"

    # Remove backups older than 30 days
    find "$BACKUP_DIR" -name "ssl_certificates_*.tar.gz" -type f -mtime +30 -delete 2>/dev/null || true
    log "Old backups cleaned up"

    # Get backup file size
    BACKUP_SIZE=$(du -h "$BACKUP_DIR/$BACKUP_FILE" | cut -f1)
    log "Backup size: $BACKUP_SIZE"

else
    log "ERROR: Failed to create backup"
    exit 1
fi

log "SSL certificate backup completed successfully"